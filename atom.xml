<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://marcuspierce.github.io</id>
    <title>毛胚房</title>
    <updated>2021-03-24T07:14:14.450Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://marcuspierce.github.io"/>
    <link rel="self" href="https://marcuspierce.github.io/atom.xml"/>
    <subtitle>MarcusPierce 个人博客</subtitle>
    <logo>https://marcuspierce.github.io/images/avatar.png</logo>
    <icon>https://marcuspierce.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 毛胚房</rights>
    <entry>
        <title type="html"><![CDATA[真实新闻 剧本预定]]></title>
        <id>https://marcuspierce.github.io/post/zhen-shi-xin-wen-ju-ben-yu-ding/</id>
        <link href="https://marcuspierce.github.io/post/zhen-shi-xin-wen-ju-ben-yu-ding/">
        </link>
        <updated>2021-03-24T07:05:43.000Z</updated>
        <content type="html"><![CDATA[<p>1月4日，本市无业游民吴某绑架了其前雇主袁某，并向袁某家属索要赎金十五万元。袁某家属放弃报警，承诺当天凑齐赎金。</p>
<p>随后，吴某为了安全收到赎金，进行了一系列迷之操作:</p>
<p>吴某指示袁某家属，于夜间十一点三十分在星河街路口等候（此处距离市中心较远，夜间路上几乎没有其他车辆行人），等到某外卖平台的骑手路过时，开车将其撞倒。趁现场混乱之际，将赎金和外卖箱中的餐品调换，以此完成支付赎金的环节；</p>
<p>为了避免引起外卖骑手的怀疑，吴某还让袁某家属提前点了一份外卖，并将标签上标有下单时间的部分撕毁，把剩余的部分标签绑在装有赎金的塑料袋上；吴某选定了外卖商家，星河街将是送餐的必经之路；</p>
<p>吴某利用虚假身份信息，租下了一栋居民楼八层和九层的两个房间，吴某将送餐地址定在九层，自己则躲在八层。一旦袁某家属偷偷报警，警方便不能在送餐地址所在的九楼将嫌疑人吴某抓捕归案。</p>
<p>当晚，嫌疑人吴某在约定时间到来之前点好外卖，之后也如同吴某所预想的一样，袁某家属成功在路口撞倒了骑手小李。</p>
<p>尽管骑手小李不是事故责任方，但是由于担心对方反过来让自己赔钱，于是强忍疼痛，迅速骑车逃离现场，继续送餐。为了避免收到差评，小李在与吴某和商家的沟通中，刻意隐瞒了此事。嫌疑人吴某收到外卖后，发现塑料袋中并不是赎金，猜测骑手小李偶然间看到了赎金并私自藏匿。</p>
<p>吴某当即对被绑的袁某进行殴打，用袁某掉下的一颗牙齿，威胁商家有食品卫生问题，要求骑手取回餐品重做，试图借此夺回赎金。</p>
<p>骑手小李因为身体不适，拒绝取餐，沟通一时陷入僵局。</p>
<p>这时，袁某家属通过短信和嫌疑人吴某取得联系，表明自己确实撞倒了骑手小李，但是因为小李逃得太快，袁某家属并没有完成调换赎金。</p>
<p>吴某指示袁某家属在原地等候，转头又打下了袁某更多的牙齿，试图以“疑似与命案有关”，恐吓骑手迅速回来取餐，了结此事。</p>
<p>但是吴某没有想到的是，小李经过权衡利弊，已经提前决定前去取餐。</p>
<p>精神高度紧张的吴某，想不到小李没打过招呼直接去了九层的送餐地址，匆匆跑上楼时，发现自己忘关了九层的房门，骑手小李已经看到了鲜血淋漓的袁某。</p>
<p>骑手小李还没从震惊中回过神，吴某迅速从背后袭击了小李，随后在小李的手机上，以对方的语气安抚外卖平台上的商家，声称此事已经结束。</p>
<p>草草处理过现场，吴某立刻骑上小李的电动车，赶往星河街路口。</p>
<p>一直等候在路口的袁某家属发现骑手重新出现，决定再次撞倒骑手，以便调换赎金解救袁某，不料这一次没控制好踩油门的力道，心急如焚的吴某被当场撞死……</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Markdown]]></title>
        <id>https://marcuspierce.github.io/post/what-is-markdown/</id>
        <link href="https://marcuspierce.github.io/post/what-is-markdown/">
        </link>
        <updated>2021-03-24T06:29:17.000Z</updated>
        <content type="html"><![CDATA[<p>Forked from https://github.com/younghz/Markdown</p>
<h2 id="主要内容">主要内容</h2>
<blockquote>
<h4 id="markdown是什么">Markdown<em>是什么</em>？</h4>
<h4 id="谁创造了它"><em>谁</em>创造了它？</h4>
<h4 id="为什么要使用它"><em>为什么</em>要使用它？</h4>
<h4 id="怎么使用"><em>怎么</em>使用？</h4>
<h4 id="谁在用"><em>谁</em>在用？</h4>
<h4 id="尝试一下">尝试一下</h4>
</blockquote>
<h2 id="正文">正文</h2>
<h3 id="1-markdown是什么">1. Markdown<em>是什么</em>？</h3>
<p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br>
<strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>
<h3 id="2-谁创造了它">2. <em>谁</em>创造了它？</h3>
<p>它由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p>
<p>他有着足以让你跪拜的人生经历：</p>
<ul>
<li><strong>14岁</strong>参与RSS 1.0规格标准的制订。</li>
<li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。</li>
<li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人。</li>
<li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li>
<li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li>
<li><strong>2013</strong>年1月自杀身亡。</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg" alt="Aaron Swartz" loading="lazy"></figure>
<p>天才都有早逝的归途。</p>
<h3 id="3-为什么要使用它">3. <em>为什么</em>要使用它？</h3>
<ul>
<li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>跨平台使用。</li>
<li>越来越多的网站支持Markdown。</li>
<li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li>
<li>摆脱Word（我不是认真的）。</li>
</ul>
<h3 id="4-怎么使用">4. <em>怎么</em>使用？</h3>
<p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>
<p>Markdown语法主要分为如下几大部分：<br>
<strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code></strong>，<strong>符号'`'</strong>。</p>
<h4 id="41-标题">4.1 标题</h4>
<p>两种形式：<br>
1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>
<blockquote>
<p>一级标题<br>
<code>=========</code><br>
二级标题<br>
<code>---------</code></p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题">一级标题</h1>
<h2 id="二级标题">二级标题</h2>
</blockquote>
<p>2）使用<code>#</code>，可表示1-6级标题。</p>
<blockquote>
<p># 一级标题<br>
## 二级标题<br>
### 三级标题<br>
#### 四级标题<br>
##### 五级标题<br>
###### 六级标题</p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题-2">一级标题</h1>
<h2 id="二级标题-2">二级标题</h2>
<h3 id="三级标题">三级标题</h3>
<h4 id="四级标题">四级标题</h4>
<h5 id="五级标题">五级标题</h5>
<h6 id="六级标题">六级标题</h6>
</blockquote>
<h4 id="42-段落">4.2 段落</h4>
<p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<h4 id="43-区块引用">4.3 区块引用</h4>
<p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>
<blockquote>
<p>&gt; 区块引用<br>
&gt;&gt; 嵌套引用</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p>区块引用</p>
<blockquote>
<p>嵌套引用</p>
</blockquote>
</blockquote>
<h4 id="44-代码区块">4.4 代码区块</h4>
<p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>
普通段落：</p>
<p>void main()<br>
{<br>
printf(&quot;Hello, Markdown.&quot;);<br>
}</p>
<p>代码区块：</p>
<pre><code>void main()
{
    printf(&quot;Hello, Markdown.&quot;);
}
</code></pre>
<p><strong>注意</strong>:需要和普通段落之间存在空行。</p>
<h4 id="45-强调">4.5 强调</h4>
<p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>
<blockquote>
<p>*斜体*，_斜体_<br>
**粗体**，__粗体__</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><em>斜体</em>，<em>斜体</em><br>
<strong>粗体</strong>，<strong>粗体</strong></p>
</blockquote>
<h4 id="46-列表">4.6 列表</h4>
<p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>
<blockquote>
<p>-（+*） 第一项<br>
-（+*） 第二项<br>
- （+*）第三项</p>
</blockquote>
<p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p>
<p>效果：</p>
<blockquote>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
</blockquote>
<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>
<blockquote>
<p>1 . 第一项<br>
2 . 第二项<br>
3 . 第三项</p>
</blockquote>
<p>效果：</p>
<blockquote>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
</blockquote>
<h4 id="47-分割线">4.7 分割线</h4>
<p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>
<h4 id="48-链接">4.8 链接</h4>
<p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br>
<strong>行内式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库](https:😕/github.com/younghz/Markdown &quot;Markdown&quot;)。</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库</a>。</p>
</blockquote>
<p><strong>参考式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库1][1]<br>
[younghz的Markdown库2][2]<br>
[1]:https:😕/github.com/younghz/Markdown &quot;Markdown&quot;<br>
[2]:https:😕/github.com/younghz/Markdown &quot;Markdown&quot;</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库1</a><br>
<a href="https:://github.com/younghz/Markdown" title="Markdown">younghz的Markdown库2</a></p>
</blockquote>
<p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>
<h4 id="49-图片">4.9 图片</h4>
<p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>
<h4 id="410-反斜杠">4.10 反斜杠<code>\</code></h4>
<p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>
<h4 id="411-符号">4.11 符号'`'</h4>
<p>起到标记作用。如：</p>
<blockquote>
<p>`ctrl+a`</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><code>ctrl+a</code></p>
</blockquote>
<h4 id="5-谁在用">5. <em>谁</em>在用？</h4>
<p>Markdown的使用者：</p>
<ul>
<li>GitHub</li>
<li>简书</li>
<li>Stack Overflow</li>
<li>Apollo</li>
<li>Moodle</li>
<li>Reddit</li>
<li>等等</li>
</ul>
<h4 id="6-尝试一下">6. 尝试一下</h4>
<ul>
<li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li>
<li><strong>在线</strong>的dillinger.io评价也不错</li>
<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li>
<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li>
<li><strong>Linux</strong>下的ReText不错。</li>
</ul>
<p><strong>当然，最终境界永远都是笔下是语法，心中格式化 😃。</strong></p>
<hr>
<p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>
虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>
(http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/ )。</p>
<hr>
<p>以上基本是所有traditonal markdown的语法。</p>
<h3 id="其它">其它：</h3>
<p>列表的使用(非traditonal markdown)：</p>
<p>用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p>
<table>
<thead>
<tr>
<th style="text-align:center">代码库</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">MarkDown</td>
<td><a href="https://github.com/younghz/Markdown" title="Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
<tr>
<td style="text-align:center">MarkDownCopy</td>
<td><a href="https://github.com/younghz/Markdown" title="Markdown">https://github.com/younghz/Markdown</a></td>
</tr>
</tbody>
</table>
<p>关于其它扩展语法可参见具体工具的使用说明。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的网站 My websites]]></title>
        <id>https://marcuspierce.github.io/post/wo-de-wang-zhan-my-websites/</id>
        <link href="https://marcuspierce.github.io/post/wo-de-wang-zhan-my-websites/">
        </link>
        <updated>2021-03-24T04:32:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="my-personal-blog-and-mirror-sites-本博客与其镜像站">My Personal Blog and mirror sites 本博客与其镜像站</h3>
<p><a href="https://marcuspierce.github.io/">GitHub Pages Origin</a> 原始地址</p>
<p><a href="https://marcuspierce.gitee.io/">Gitee Pages Mirror</a> 适合国内访问</p>
<p><a href="https://marcuspierce.netlify.app/">Netlify Mirror</a> 镜像备份</p>
<h3 id="personal-music-sites-个人音乐站">Personal Music sites 个人音乐站</h3>
<p><a href="https://unlock-music-lovat.vercel.app">加密音乐解锁</a> unlock-music Vercel部署站点</p>
<p><a href="https://yes-play-music-gamma.vercel.app">在线音乐平台</a> YesPlayMusic Vercel部署站点</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lorem Ipsum]]></title>
        <id>https://marcuspierce.github.io/post/lorem-ipsum/</id>
        <link href="https://marcuspierce.github.io/post/lorem-ipsum/">
        </link>
        <updated>2021-03-24T03:29:31.000Z</updated>
        <content type="html"><![CDATA[<h4 id="neque-porro-quisquam-est-qui-dolorem-ipsum-quia-dolor-sit-amet-consectetur-adipisci-velit">&quot;Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...&quot;</h4>
<h5 id="无人爱苦亦无人寻之欲之乃因其苦">&quot;无人爱苦，亦无人寻之欲之，乃因其苦...&quot;</h5>
<hr>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent bibendum ante ipsum, consectetur dignissim mauris malesuada id. Mauris mattis lacus risus, vel tempus lacus dictum ut. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce et nulla massa. Sed ultrices tincidunt pellentesque. Quisque tellus ipsum, efficitur eget dolor vel, fringilla porta massa. Ut vitae pretium felis. Sed commodo erat sed sapien accumsan, at placerat enim accumsan. Nam metus sapien, auctor a ante ut, aliquet tempus leo. Vestibulum imperdiet libero tellus, eu vestibulum nulla rhoncus vitae. Donec facilisis, ipsum ornare blandit gravida, tellus nisl porta mauris, nec tempor turpis tellus at ante. Etiam feugiat elit a tempus imperdiet. Sed auctor luctus tellus eget pharetra. Maecenas scelerisque libero ut rutrum congue. Donec quis placerat purus.</p>
<p>Phasellus quis efficitur dui. Aenean convallis dui sed dui eleifend hendrerit. Fusce neque lectus, vehicula eu rhoncus in, tristique a metus. Aenean venenatis tincidunt auctor. Duis hendrerit consectetur tellus scelerisque dictum. Maecenas ante urna, lacinia sit amet fringilla porttitor, posuere vel odio. Curabitur feugiat, ante vel semper feugiat, quam ante rhoncus augue, vitae imperdiet purus diam sollicitudin eros. Proin eleifend risus in sollicitudin tempus. Pellentesque eu luctus nunc, eget lobortis magna. Cras id lobortis neque. Donec vitae dui in elit ultricies pellentesque vel a lorem. Donec sit amet pretium dolor, at pharetra massa. Integer facilisis sem in dapibus interdum.</p>
<p>Cras aliquam elit urna, nec fringilla diam euismod eu. Cras facilisis justo eu diam egestas volutpat. Donec dapibus, felis vel consectetur mattis, tortor ligula faucibus erat, non eleifend nibh ipsum eget est. Suspendisse cursus mi in laoreet tempus. Quisque eu libero dictum est sagittis sodales. Vivamus placerat ligula arcu, eu eleifend orci mattis sit amet. Maecenas urna libero, ornare non sagittis in, vestibulum vel elit. Mauris egestas fringilla ante in viverra.</p>
<p>Nulla nec scelerisque massa. Praesent volutpat mollis mi, varius auctor magna molestie facilisis. Morbi non odio sed odio sollicitudin lacinia. Morbi vestibulum vulputate arcu et condimentum. Nullam sed fringilla mi. Pellentesque non vehicula ipsum, non elementum orci. In pulvinar nisl et leo vulputate ullamcorper. Sed enim massa, blandit sed feugiat id, gravida ut nibh. Sed eget leo malesuada est ultricies euismod.</p>
<p>Vestibulum vel congue odio. Duis justo metus, vehicula ut rhoncus in, iaculis sit amet quam. Praesent eu accumsan neque. Morbi porttitor tempus felis. Quisque sed scelerisque lorem, quis vulputate leo. Suspendisse ut tellus ornare, rhoncus orci ac, dictum ex. Praesent maximus urna quis lacus congue varius. Aenean vitae blandit justo. Cras elit mi, congue a lacinia porttitor, pretium laoreet lacus. Suspendisse cursus diam vitae nisl lacinia rutrum. Aliquam venenatis iaculis lacinia.</p>
]]></content>
    </entry>
</feed>